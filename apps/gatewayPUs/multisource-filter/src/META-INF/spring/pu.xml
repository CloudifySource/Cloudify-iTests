<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-gateway="http://www.openspaces.org/schema/core/gateway"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/8.0/core/openspaces-core.xsd
       http://www.openspaces.org/schema/core/gateway http://www.openspaces.org/schema/8.0/core/gateway/openspaces-gateway.xsd">

    <bean id="propertiesConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    </bean>
    <context:annotation-config/>

    <!-- Scan for components (both Spring ones and OpenSpaces ones) -->
    <context:component-scan base-package="com.gatewayPUs.multisource-filter"/>

    <!-- Enables the usage of @GigaSpaceContext annotation based injection. -->
    <os-core:giga-space-context/>

    <bean id="simpleFilter" class="com.gatewatPUs.filter.ReplicationFilter">
    	<property name="timeout" value="${timeout}"/>
    </bean>

    <!-- A bean representing a space (an IJSpace implementation). Note, we do
         not specify here the cluster topology of the space. It is declated outside
         of the processing unit or within the SLA bean. -->
    <os-core:space id="space" url="${spaceUrl}" gateway-targets="gatewayTargets">
     <os-core:space-replication-filter>
            <os-core:output-filter ref="simpleFilter"/>
        </os-core:space-replication-filter>
        <os-core:properties>
			<props>
				<prop key="cluster-config.groups.group.repl-policy.processing-type">multi-source</prop>
			</props>
		</os-core:properties>
    </os-core:space>

    <!-- Defines a local Jini transaction manager. -->
    <os-core:distributed-tx-manager id="transactionManager"/>

    <os-gateway:targets id="gatewayTargets" local-gateway-name="${localGatewayName}">
        <os-gateway:target name="${gatewayTarget}"/>
    </os-gateway:targets>

    <!-- OpenSpaces simplified space API built on top of IJSpace/JavaSpace. -->
    <os-core:giga-space id="gigaSpace" space="space" tx-manager="transactionManager" />



</beans>